// Generated by Dagger (https://google.github.io/dagger).
package org.odk.collect.android.application;

import android.app.Activity;
import dagger.MembersInjector;
import dagger.android.DispatchingAndroidInjector;
import javax.inject.Provider;
import org.opendatakit.httpclientandroidlib.client.CookieStore;
import org.opendatakit.httpclientandroidlib.client.CredentialsProvider;

public final class Collect_MembersInjector implements MembersInjector<Collect> {
  private final Provider<CookieStore> cookieStoreProvider;

  private final Provider<CredentialsProvider> credsProvider;

  private final Provider<DispatchingAndroidInjector<Activity>> androidInjectorProvider;

  public Collect_MembersInjector(
      Provider<CookieStore> cookieStoreProvider,
      Provider<CredentialsProvider> credsProvider,
      Provider<DispatchingAndroidInjector<Activity>> androidInjectorProvider) {
    this.cookieStoreProvider = cookieStoreProvider;
    this.credsProvider = credsProvider;
    this.androidInjectorProvider = androidInjectorProvider;
  }

  public static MembersInjector<Collect> create(
      Provider<CookieStore> cookieStoreProvider,
      Provider<CredentialsProvider> credsProvider,
      Provider<DispatchingAndroidInjector<Activity>> androidInjectorProvider) {
    return new Collect_MembersInjector(cookieStoreProvider, credsProvider, androidInjectorProvider);
  }

  @Override
  public void injectMembers(Collect instance) {
    injectCookieStore(instance, cookieStoreProvider.get());
    injectCredsProvider(instance, credsProvider.get());
    injectAndroidInjector(instance, androidInjectorProvider.get());
  }

  public static void injectCookieStore(Collect instance, CookieStore cookieStore) {
    instance.cookieStore = cookieStore;
  }

  public static void injectCredsProvider(Collect instance, CredentialsProvider credsProvider) {
    instance.credsProvider = credsProvider;
  }

  public static void injectAndroidInjector(
      Collect instance, DispatchingAndroidInjector<Activity> androidInjector) {
    instance.androidInjector = androidInjector;
  }
}
